plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs'
}

android {
    compileSdk libs.versions.compileSdk.get().toInteger()

    defaultConfig {
        applicationId libs.versions.applicationId.get()
        minSdk libs.versions.minSdk.get().toInteger()
        targetSdk libs.versions.targetSdk.get().toInteger()
        versionCode libs.versions.appVersionCode.get().toInteger()
        versionName libs.versions.appVersionName.get()
        multiDexEnabled = true

        testInstrumentationRunner libs.versions.testRunner.get()
        consumerProguardFiles libs.versions.consumerRules.get()

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }

        resConfigs "zh_CN", "zh_TW", "en"
        vectorDrawables.useSupportLibrary = true

        buildConfigField "String", "PROJECT_NAME", '"HvMail"'
        buildConfigField "String", "AUTHOR_NAME", '"Z7Dream"'
        buildConfigField "String", "AUTHOR_MAIL", '"zhangxyfs@126.com"'
    }

    signingConfigs {
        release
    }

    buildTypes {
        release {
            if (project.hasProperty('storeFile')) {
                signingConfig signingConfigs.release
            }

            minifyEnabled true
            proguardFiles getDefaultProguardFile(libs.versions.proguardFiles.get()), libs.versions.proguardRules.get()
        }

        debug {
            applicationIdSuffix ".debug"
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = libs.versions.kotlinJvmVersion.get()
    }

    viewBinding {
        enabled true
    }

    lintOptions {
        checkDependencies true
        abortOnError false
        lintConfig file("$rootProject.projectDir/config/lint/lint.xml")
    }


    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/README'
        exclude 'META-INF/README.md'
        exclude 'META-INF/CHANGES'
        exclude 'LICENSE.txt'
        exclude 'META-INF/*.kotlin_module'
        exclude 'META-INF/*.version'
        exclude 'kotlin/**'
        exclude 'DebugProbesKt.bin'
        pickFirst 'META-INF/LICENSE.md'
        pickFirst 'META-INF/NOTICE.md'
    }
}

dependencies {
    implementation(libs.bundles.androidXBundles)
    implementation(libs.bundles.roomBundles)
    implementation(libs.timber)

    testImplementation(libs.bundles.testBundles)
    androidTestImplementation(libs.bundles.androidTestBundles)

    kapt libs.lifecycleKapt
    kapt libs.roomKapt

    implementation project(":collect")
}